from dash import register_page, Output, Input, State, dcc, callback, html
import dash_mantine_components as dmc

from data.load_and_process_data import (
    gdf_transport_age,
    gdf_transport_age_json,
    df_transport_age_pie,
    gdf_transport_type,
    gdf_transport_type_json,
    df_transport_type_pie,
    gdf_transport_pop,
    gdf_transport_pop_json,
    df_transport_pop_hist,
    gdf_transport_kmeans,
    gdf_transport_kmeans_json,
    pourcentage_vehicules_20_ans,
    pourcentage_vehicules_verts,
    nombre_vehicules_par_100_habitants,
)
from view.transport import (
    map_transport_age,
    pie_transport_age,
    map_transport_type,
    pie_transport_type,
    map_transport_kmeans,
    map_transport_pop,
    hist_transport_pop,
)

register_page(__name__, path="/transport", name="Transport", title="OPENDATA")


def layout():
    return dmc.Paper(
        dmc.Stack(
            [
                dmc.Title("Le transport √† Barcelone en 2023", order=1),
                dmc.Stack(
                    [
                        dmc.Text(
                            "Le transport √† Barcelone joue un r√¥le cl√© dans la qualit√© de l‚Äôair de la ville.\
                                La circulation dense et l‚Äôactivit√© industrielle contribuent aux niveaux de pollution,\
                                notamment aux concentrations de particules fines (PM10),\
                                qui varient selon les districts et les conditions m√©t√©orologiques.\
                                L‚Äôanalyse des donn√©es permet de mieux comprendre l‚Äôimpact des v√©hicules anciens et des transports propres sur l‚Äôenvironnement urbain."
                        ),
                        get_transport_stats_table(
                            pourcentage_vehicules_20_ans, pourcentage_vehicules_verts
                        ),
                        dmc.Text(
                            "Les cartes interactives ci-dessous illustrent la r√©partition des v√©hicules de plus de 20 ans, "
                            "des v√©hicules verts par district et la densit√© de v√©hicules par habitant."
                        ),
                    ]
                ),
                dmc.Divider(),
                transport_age_section(),
                dmc.Divider(),
                transport_type_section(),
                dmc.Divider(),
                transport_pop_section(),
                dmc.Divider(),
                transport_kmeans_section(),
            ]
        ),
        withBorder=True,
        p="md",
    )


def get_transport_stats_table(
    pourcentage_vehicules_20_ans: float, pourcentage_vehicules_verts: float
) -> dmc.Center:
    return dmc.Center(
        dmc.Table(
            id="table-stats-transport",
            highlightOnHover=True,
            withTableBorder=True,
            withColumnBorders=True,
            data={
                "caption": "Tableau des statistiques sur le transport √† Barcelone",
                "head": ["Cat√©gorie", "Valeur"],
                "body": [
                    [
                        "Pourcentage de v√©hicules de plus de 20 ans",
                        f"{pourcentage_vehicules_20_ans:.2f}%",
                    ],
                    [
                        "Pourcentage de v√©hicules verts",
                        f"{pourcentage_vehicules_verts:.2f}%",
                    ],
                    [
                        "Nombre de v√©hicules par 100 habitants",
                        f"{nombre_vehicules_par_100_habitants:.2f}",
                    ],
                ],
            },
            # style={"width": "75%"},
        )
    )


def transport_age_section():
    return dmc.Stack(
        [
            dmc.SimpleGrid(
                [
                    dmc.SimpleGrid(
                        [
                            dmc.Text(
                                [
                                    html.H4(
                                        "üöó Analyse de l'√¢ge des v√©hicules",
                                        className="card-title",
                                    ),
                                    html.P(
                                        "Cette carte montre le pourcentage de v√©hicules de plus de 20 ans par district. "
                                        "Les v√©hicules anciens sont un facteur cl√© de pollution atmosph√©rique, "
                                        "contribuant aux particules fines et aux oxydes d‚Äôazote (NOx).",
                                        className="card-text",
                                    ),
                                    html.P(
                                        "Les zones affichant des pourcentages √©lev√©s indiquent une flotte vieillissante, "
                                        "ce qui peut √™tre un indicateur de pollution accrue.",
                                        className="card-text",
                                    ),
                                ],
                                id="transportation-age-text",
                            ),
                            dcc.Graph(
                                id="transportation-age-pie",
                                figure=pie_transport_age(df_transport_age_pie),
                            ),
                        ],
                    ),
                    dcc.Graph(
                        id="transportation-age-map",
                        figure=map_transport_age(
                            gdf_transport_age, gdf_transport_age_json
                        ),
                    ),
                ],
                cols=2,
                style={"height": "100%"},
            ),
        ],
    )


def transport_type_section():
    return dmc.Stack(
        [
            dmc.SimpleGrid(
                [
                    dcc.Graph(
                        id="transportation-type-map",
                        figure=map_transport_type(
                            gdf_transport_type, gdf_transport_type_json
                        ),
                    ),
                    dmc.SimpleGrid(
                        [
                            dmc.Text(
                                [
                                    html.H4(
                                        "üå± Analyse des v√©hicules verts",
                                        className="card-title",
                                    ),
                                    html.P(
                                        "Cette carte montre le pourcentage de v√©hicules √©cologiques par district. "
                                        "Les v√©hicules hybrides et √©lectriques r√©duisent les √©missions de CO‚ÇÇ et "
                                        "de polluants atmosph√©riques, contribuant √† une ville plus durable.",
                                        className="card-text",
                                    ),
                                    html.P(
                                        "Les zones avec un fort pourcentage de v√©hicules verts montrent une adoption "
                                        "plus rapide des solutions de transport propres.",
                                        className="card-text",
                                    ),
                                ],
                                id="transportation-type-text",
                            ),
                            dcc.Graph(
                                id="transportation-type-pie",
                                figure=pie_transport_type(df_transport_type_pie),
                            ),
                        ],
                    ),
                ],
                cols=2,
                style={"height": "100%"},
            ),
        ],
    )


def transport_pop_section():
    return dmc.Stack(
        [
            dmc.SimpleGrid(
                [
                    dmc.SimpleGrid(
                        [
                            dmc.Text(
                                [
                                    html.H4(
                                        "üöó Analyse de la densit√© de v√©hicules",
                                        className="card-title",
                                    ),
                                    html.P(
                                        "Cette carte montre le nombre de v√©hicules par 100 habitants par district. "
                                        "Les zones avec une forte densit√© de v√©hicules peuvent √™tre sujettes √† une "
                                        "pollution atmosph√©rique plus √©lev√©e et √† des embouteillages.",
                                        className="card-text",
                                    ),
                                    html.P(
                                        "Les quartiers avec une densit√© de v√©hicules √©lev√©e peuvent b√©n√©ficier de "
                                        "solutions de transport en commun et de mobilit√© douce.",
                                        className="card-text",
                                    ),
                                ],
                                id="transportation-pop-text",
                            ),
                            dcc.Graph(
                                id="transportation-pop-hist",
                                figure=hist_transport_pop(df_transport_pop_hist),
                            ),
                        ],
                    ),
                    dcc.Graph(
                        id="transportation-pop-map",
                        figure=map_transport_pop(
                            gdf_transport_pop, gdf_transport_pop_json
                        ),
                    ),
                ],
                cols=2,
                style={"height": "100%"},
            ),
        ],
    )


def transport_kmeans_section():
    return dmc.Stack(
        [
            dmc.SimpleGrid(
                [
                    dcc.Graph(
                        id="transportation-kmeans-map",
                        figure=map_transport_type(
                            gdf_transport_type, gdf_transport_type_json
                        ),
                    ),
                    dmc.Text(
                        [
                            html.H4(
                                "üìä Analyse des clusters de transport",
                                className="card-title",
                            ),
                            html.P(
                                "Cette carte regroupe les districts en trois clusters en fonction de l'√¢ge "
                                "des v√©hicules et de leur caract√®re √©cologique.",
                                className="card-text",
                            ),
                            html.Ul(
                                [
                                    html.Li(
                                        "Cluster 0 : Zones avec une forte proportion de v√©hicules anciens et polluants."
                                    ),
                                    html.Li(
                                        "Cluster 1 : Districts en transition entre ancien et moderne."
                                    ),
                                    html.Li(
                                        "Cluster 2 : Quartiers o√π les v√©hicules verts et neufs sont dominants."
                                    ),
                                ]
                            ),
                            html.P(
                                "Cette classification permet de cibler les efforts pour r√©duire la pollution et "
                                "promouvoir des alternatives durables.",
                                className="card-text",
                            ),
                        ],
                        id="transportation-kmeans-text",
                    ),
                ],
                style={"height": "100%"},
            ),
        ],
    )


# --- CALLBACKS ---


@callback(
    Output("transportation-age-map", "figure"),
    Output("transportation-age-pie", "figure"),
    Output("transportation-type-map", "figure"),
    Output("transportation-type-pie", "figure"),
    Output("transportation-pop-map", "figure"),
    Output("transportation-pop-hist", "figure"),
    Output("transportation-kmeans-map", "figure"),
    Input("mantine-provider", "forceColorScheme"),
    # prevent_initial_call=True,
)
def select_value(color_scheme):
    map = map_transport_age(gdf_transport_age, gdf_transport_age_json, color_scheme)
    pie = pie_transport_age(df_transport_age_pie, color_scheme)
    map2 = map_transport_type(gdf_transport_type, gdf_transport_type_json, color_scheme)
    pie2 = pie_transport_type(df_transport_type_pie, color_scheme)
    map3 = map_transport_pop(gdf_transport_pop, gdf_transport_pop_json, color_scheme)
    hist3 = hist_transport_pop(df_transport_pop_hist, color_scheme)
    map4 = map_transport_kmeans(
        gdf_transport_kmeans, gdf_transport_kmeans_json, color_scheme
    )
    return map, pie, map2, pie2, map3, hist3, map4
